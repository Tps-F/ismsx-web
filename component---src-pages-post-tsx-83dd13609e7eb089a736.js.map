{"version":3,"file":"component---src-pages-post-tsx-83dd13609e7eb089a736.js","mappings":"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","sources":["webpack://isshin/./src/pages/post.tsx","webpack://isshin/./src/utils/auth.ts","webpack://isshin/./src/utils/database.ts"],"sourcesContent":["import { useScrollRestoration, type HeadFC, type PageProps } from \"gatsby\";\n\nimport React, { FormEventHandler, useState } from \"react\";\nimport { database } from \"../utils/database\";\nimport { useAuth } from \"../utils/auth\";\n\nconst handleSubmit: FormEventHandler<HTMLFormElement> = (event) => {\n\tevent.preventDefault();\n\tconst form = new FormData(event.currentTarget);\n\tconst workName = (form.get(\"workName\") || \"\").toString();\n\tconst date = (form.get(\"date\") || \"\").toString();\n\tconst url = (form.get(\"URL\") || \"\").toString();\n\tconst description = (form.get(\"description\") || \"\").toString();\n\tconst images = form.getAll(\"images\") as File[];\n\n\tconst { addWork } = database();\n\taddWork({ workName, date, url, description, images });\n\tconsole.log(images);\n\talert(`work: ${images}`);\n};\n\nconst PostPage: React.FC<PageProps> = () => {\n\tconst { isLogin } = useAuth();\n\n\tisLogin();\n\treturn (\n\t\t<>\n\t\t\t<div className=\"min-h-screen py-6 sm:py-8 lg:py-12 font-caviardreams\">\n\t\t\t\t<div className=\"mx-auto max-w-screen-2xl px-4 md:px-8\">\n\t\t\t\t\t<div className=\"mb-10 md:mb-16\">\n\t\t\t\t\t\t<h2 className=\"mb-4 text-center text-2xl font-bold text-gray-800 md:mb-6 lg:text-3xl\">\n\t\t\t\t\t\t\t仕事の追加よー\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"mx-auto grid max-w-screen-md gap-4 sm:grid-cols-2\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"sm:col-span-2\">\n\t\t\t\t\t\t\t<label className=\"mb-2 inline-block text-sm text-gray-800 sm:text-base\">\n\t\t\t\t\t\t\t\t仕事名\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"workName\"\n\t\t\t\t\t\t\t\tclassName=\"w-full rounded border px-3 py-2 text-gray-800 outline-none ring-indigo-300 transition duration-100 focus:ring\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label className=\"mb-2 inline-block text-sm text-gray-800 sm:text-base\">\n\t\t\t\t\t\t\t\tいつのか(日付順で並び替えてる)\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"date\"\n\t\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\t\tclassName=\"w-full rounded border bg-white px-3 py-2 text-gray-800 outline-none ring-indigo-300 transition duration-100 focus:ring\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label className=\"mb-2 inline-block text-sm text-gray-800 sm:text-base\">\n\t\t\t\t\t\t\t\t遷移先URL\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"URL\"\n\t\t\t\t\t\t\t\tclassName=\"w-full rounded border bg-gray-50 px-3 py-2 text-gray-800 outline-none ring-indigo-300 transition duration-100 focus:ring\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"sm:col-span-2\">\n\t\t\t\t\t\t\t<label className=\"mb-2 inline-block text-sm text-gray-800 sm:text-base\">\n\t\t\t\t\t\t\t\tサムネ用(3枚までかなー)\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"images\"\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\taccept=\".png,.jpg,.webp,.gif\"\n\t\t\t\t\t\t\t\tclassName=\"w-full rounded border bg-gray-50 px-3 py-2 text-gray-800 outline-none ring-indigo-300 transition duration-100 focus:ring\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/*\n\t\t\t\t\t\t<div className=\"sm:col-span-2\">\n\t\t\t\t\t\t\t<label className=\"mb-2 inline-block text-sm text-gray-800 sm:text-base\">\n\t\t\t\t\t\t\t\t仕事の説明(拡大したら出てくる)\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\tclassName=\"h-64 w-full rounded border bg-gray-50 px-3 py-2 text-gray-800 outline-none ring-indigo-300 transition duration-100 focus:ring\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t*/}\n\n\t\t\t\t\t\t<div className=\"flex items-center justify-between sm:col-span-2\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"inline-block rounded-lg bg-indigo-500 px-8 py-3 text-center text-sm font-semibold text-white outline-none ring-indigo-300 transition duration-100 hover:bg-indigo-600 focus-visible:ring active:bg-indigo-700 md:text-base\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default PostPage;\nexport const Head: HeadFC = () => <title>isshin — Works</title>;\n","import { navigate } from \"gatsby\";\nimport { supabase } from \"./supabase\";\n\nexport const useAuth = () => {\n\tconst loginWithPassword = async (email: string, password: string) => {\n\t\ttry {\n\t\t\tconst { data, error } = await supabase.auth.signInWithPassword({\n\t\t\t\temail: email,\n\t\t\t\tpassword: password,\n\t\t\t});\n\t\t\tif (error) {\n\t\t\t\tthrow new Error(error.message);\n\t\t\t}\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tconsole.error(error as Error);\n\t\t\tthrow error;\n\t\t}\n\t};\n\n\tconst isLogin = async () => {\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { user },\n\t\t\t\terror,\n\t\t\t} = await supabase.auth.getUser();\n\t\t\tif (error) navigate(\"/login\");\n\t\t} catch (error) {\n\t\t\tconsole.error(error as Error);\n\t\t}\n\t};\n\treturn {\n\t\tloginWithPassword,\n\t\tisLogin,\n\t};\n};\n","import { supabase } from \"./supabase\";\r\n\r\ninterface addWorkProps {\r\n\tworkName: string;\r\n\tdate: string;\r\n\turl: string;\r\n\tdescription: string;\r\n\timages: File[];\r\n}\r\n\r\nexport const database = () => {\r\n\tconst addWork = async ({\r\n\t\tworkName,\r\n\t\tdate,\r\n\t\turl,\r\n\t\tdescription,\r\n\t\timages,\r\n\t}: addWorkProps) => {\r\n\t\ttry {\r\n\t\t\tconst { data: id_data, error: id_error } = await supabase\r\n\t\t\t\t.from(\"works\")\r\n\t\t\t\t.select(\"id\")\r\n\t\t\t\t.order(\"id\", { ascending: false })\r\n\t\t\t\t.limit(1);\r\n\t\t\tif (id_error) {\r\n\t\t\t\tthrow new Error(`Error fetching max work id: ${id_error.message}`);\r\n\t\t\t}\r\n\t\t\tconst folder_name = ((id_data?.[0]?.id || 0) + 1).toString();\r\n\r\n\t\t\tconsole.log(id_data);\r\n\t\t\tconsole.log(folder_name);\r\n\r\n\t\t\tconst uploadData: any[] | null = [];\r\n\t\t\tconst uploadPromises = images.map(async (image, index) => {\r\n\t\t\t\tconst { data, error } = await supabase.storage\r\n\t\t\t\t\t.from(\"assets\")\r\n\t\t\t\t\t.upload(`works/${folder_name}/${index}`, image);\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tthrow new Error(`Error uploading image: ${error.message}`);\r\n\t\t\t\t}\r\n\t\t\t\tuploadData.push(data);\r\n\t\t\t});\r\n\r\n\t\t\tawait Promise.all(uploadPromises);\r\n\r\n\t\t\tconsole.log(uploadData);\r\n\t\t\tconst imagePathList: string[] = uploadData.map((item) => item.fullPath);\r\n\t\t\tconsole.log(imagePathList);\r\n\r\n\t\t\tconst { data, error } = await supabase\r\n\t\t\t\t.from(\"works\")\r\n\t\t\t\t.insert([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: workName,\r\n\t\t\t\t\t\tdate: date,\r\n\t\t\t\t\t\timage: imagePathList,\r\n\t\t\t\t\t\turl: url,\r\n\t\t\t\t\t\tdescription: description,\r\n\t\t\t\t\t},\r\n\t\t\t\t])\r\n\t\t\t\t.select();\r\n\t\t\tif (error) {\r\n\t\t\t\tthrow new Error(`Error uploading works: ${error.message}`);\r\n\t\t\t}\r\n\t\t\tconsole.log(data);\r\n\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"An error occurred:\", (error as Error).message);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tconst getWorks = async () => {\r\n\t\ttry {\r\n\t\t\tconst { data, error } = await supabase.from(\"works\").select(\"*\");\r\n\t\t\tif (error) {\r\n\t\t\t\tthrow new Error(`Error uploading image: ${error.message}`);\r\n\t\t\t}\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"An error occurred:\", (error as Error).message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\taddWork,\r\n\t\tgetWorks,\r\n\t};\r\n};\r\n"],"names":["handleSubmit","event","preventDefault","form","FormData","currentTarget","workName","get","toString","date","url","description","images","getAll","addWork","database","console","log","alert","PostPage","isLogin","useAuth","React","className","onSubmit","name","type","multiple","accept","Head","loginWithPassword","async","email","password","data","error","supabase","auth","signInWithPassword","Error","message","user","getUser","navigate","_ref","_id_data$","id_data","id_error","from","select","order","ascending","limit","folder_name","id","uploadData","uploadPromises","map","image","index","storage","upload","push","Promise","all","imagePathList","item","fullPath","insert","getWorks"],"sourceRoot":""}